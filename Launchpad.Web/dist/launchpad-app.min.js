/*! launchpad-app 01-11-2016 */

!function(){"use strict";angular.module("lss-launchpad",["ui.router"])}(),function(){function a(a,b,c){c.interceptors.push("authorizationInterceptor"),b.otherwise("/login");var d=[{name:"login",url:"/login",views:{content:{component:"lssLogin"},header:{component:"lssHeader"},nav:{component:"lssEmptyNav"}}},{name:"register",url:"/register",views:{content:{component:"lssRegister"},header:{component:"lssHeader"},nav:{component:"lssEmptyNav"}}},{name:"dashboard",url:"/dashboard",views:{content:{component:"lssDashboard"},header:{component:"lssSecureHeader"},nav:{component:"lssSecureNav"}}},{name:"addRole",url:"/addRole",views:{content:{component:"lssAddRole"},header:{component:"lssSecureHeader"},nav:{component:"lssSecureNav"}}},{name:"addClaim",url:"/addClaim",views:{content:{component:"lssAddClaim"},header:{component:"lssSecureHeader"},nav:{component:"lssSecureNav"}}},{name:"userDashboard",url:"/userDashboard",views:{content:{component:"lssAssignRole"},header:{component:"lssSecureHeader"},nav:{component:"lssSecureNav"}}}];d.forEach(function(b){a.state(b)})}angular.module("lss-launchpad").config(["$stateProvider","$urlRouterProvider","$httpProvider",a])}(),function(){"use strict";function a(a,b,c){function d(d,e){var f=a.defer(),g="grant_type=password&username="+d+"&password="+e;return b.post("/Token",g,{headers:{"Content-Type":"application/x-www-form-urlencoded"}}).success(function(a){c.setToken(a.access_token),f.resolve(!0)}),f.promise}function e(c,d){var e=a.defer(),f={email:c,password:d,confirmPassword:d};return b.post("/api/account/register",f).then(function(a){e.resolve(a.data)},function(a){e.reject(a.data)}),e.promise}var f={login:d,register:e};return f}angular.module("lss-launchpad").factory("accountService",a),a.$inject=["$q","$http","authorizationService"]}(),function(){"use strict";function a(a,b,c,d,e,f){function g(){a.login(i.username,i.password).then(h)}function h(a){f.getClaimsMap().then(function(a){c.setClaims(a),c.hasClaim(d.lssClaimType,d.claims.login)?b.go("dashboard"):e.info("User does not have required claim: "+d.claims.login)})}var i=this;i.login=g,i.username="fred@fred.com",i.password="Hello123!",i.$onInit=function(){},i.$onChanges=function(a){},i.$onDestory=function(){}}angular.module("lss-launchpad").component("lssLogin",{templateUrl:"/app/account/login.component.html",controller:a,controllerAs:"vm",bindings:{Binding:"="}}),a.$inject=["accountService","$state","authorizationService","lssConstants","$log","userService"]}(),function(){"use strict";function a(a,b,c){function d(){e.password==e.confirmPassword?a.register(e.username,e.password).then(function(a){e.registrationErrors=[],b.go("login")},function(a){var b=c.getModelStateErrors(a);e.registrationErrors=b}):e.registrationErrors=["Passwords must match"]}var e=this;e.username="",e.password="",e.confirmPassword="",e.register=d,e.registrationErrors=[],e.$onInit=function(){},e.$onChanges=function(a){},e.$onDestory=function(){}}angular.module("lss-launchpad").component("lssRegister",{templateUrl:"/app/account/register.component.html",controller:a,controllerAs:"vm",bindings:{Binding:"="}}),a.$inject=["accountService","$state","errorService"]}(),function(){"use strict";function a(a,b,c){function d(a){var c=b.getToken();return c&&(a.headers.Authorization="bearer "+c),a}function e(b){var d=a.defer();return 401==b.status&&c.go("login"),d.reject(b),d.promise}var f={request:d,responseError:e};return f}angular.module("lss-launchpad").factory("authorizationInterceptor",a),a.$inject=["$q","authorizationService","$state"]}(),function(){"use strict";function a(a){function b(a){g=a}function c(a,b){var c=g[a+"->"+b]===!0;return c}function d(a){f=a,null===f&&(g={})}function e(){return f}var f=null,g={},h={setToken:d,getToken:e,hasClaim:c,setClaims:b};return h}angular.module("lss-launchpad").factory("authorizationService",a),a.$inject=["$q"]}(),function(){"use strict";angular.module("lss-launchpad").constant("lssConstants",{lssClaimType:"lss.permission",claims:{login:"login"}})}(),function(){"use strict";function a(){function a(a){var b=[];if(a.modelState)for(var c in a.modelState)for(var d=a.modelState[c],e=0;e<d.length;++e)b.push(d[e]);return b}var b={getModelStateErrors:a};return b}angular.module("lss-launchpad").factory("errorService",a)}(),function(){"use strict";function a(a){var b=this;b.$onInit=function(){a.getWidgets().then(function(a){b.widgets=a})},b.$onChanges=function(a){},b.$onDestory=function(){}}angular.module("lss-launchpad").component("lssDashboard",{templateUrl:"/app/dashboard/dashboard.component.html",controller:a,controllerAs:"vm",bindings:{Binding:"="}}),a.$inject=["widgetService"]}(),function(){"use strict";function a(){var a=this;a.$onInit=function(){},a.$onChanges=function(a){},a.$onDestory=function(){}}angular.module("lss-launchpad").component("lssHeader",{templateUrl:"/app/header/header.component.html",controller:a,controllerAs:"vm",bindings:{Binding:"="}})}(),function(){"use strict";function a(a,b){function c(){a.setToken(null),b.go("login")}var d=this;d.logout=c,d.$onInit=function(){},d.$onChanges=function(a){},d.$onDestory=function(){}}angular.module("lss-launchpad").component("lssSecureHeader",{templateUrl:"/app/header/secure.header.component.html",controller:a,controllerAs:"vm",bindings:{Binding:"="}}),a.$inject=["authorizationService","$state"]}(),function(){"use strict";function a(){var a=this;a.$onInit=function(){},a.$onChanges=function(a){},a.$onDestory=function(){}}angular.module("lss-launchpad").component("lssEmptyNav",{templateUrl:"/app/nav/empty-nav.component.html",controller:a,bindings:{}})}(),function(){"use strict";function a(a,b){function c(){e.states=[],d(b.lssClaimType,b.claims.addClaim,"Claims","addClaim")}function d(b,c,d,f){a.hasClaim(b,c)&&e.states.push({name:d,state:f})}var e=this;e.states=[],e.$onInit=function(){c()},e.$onChanges=function(a){},e.$onDestory=function(){}}angular.module("lss-launchpad").component("lssSecureNav",{templateUrl:"/app/nav/secure-nav.component.html",controller:a,controllerAs:"vm",bindings:{}}),a.$inject=["authorizationService","lssConstants"]}(),function(){"use strict";function a(a){function b(){a.addClaim(c.selectedRole,c.claimType,c.claimValue).then(function(a){c.claimType="",c.claimValue=""})}var c=this;c.claimType="",c.claimValue="",c.roles=[],c.save=b,c.$onInit=function(){a.getRoles().then(function(a){c.roles=a,c.selectedRole=c.roles[0]})},c.$onChanges=function(a){},c.$onDestory=function(){}}angular.module("lss-launchpad").component("lssAddClaim",{templateUrl:"/app/role/add-claim.component.html",controller:a,controllerAs:"vm",bindings:{}}),a.$inject=["roleService"]}(),function(){"use strict";function a(a){function b(){a.addRole(c.roleName).then(function(a){c.roleName=""},function(a){})}var c=this;c.roleName="",c.save=b,c.$onInit=function(){},c.$onChanges=function(a){},c.$onDestory=function(){}}angular.module("lss-launchpad").component("lssAddRole",{templateUrl:"/app/role/add-role.component.html",controller:a,controllerAs:"vm",bindings:{}}),a.$inject=["roleService"]}(),function(){"use strict";function a(a,b){function c(c){var d=b.defer(),e={name:c};return a.post("/api/role",e).then(function(a){d.resolve(!0)},function(a){d.reject(a.data)}),d.promise}function d(){var c=b.defer();return a.get("/api/role").then(function(a){c.resolve(a.data)}),c.promise}function e(c,d,e){var f=b.defer(),g={role:c,claim:{claimType:d,claimValue:e}};return a.post("/api/role/claim",g).then(function(a){f.resolve(a.data)},function(a){f.reject(a.data)}),f.promise}var f={addRole:c,getRoles:d,addClaim:e};return f}angular.module("lss-launchpad").factory("roleService",a),a.$inject=["$http","$q"]}(),function(){"use strict";function a(a){var b=this;b.statuses=[],b.$onInit=function(){a.getStatus().then(function(a){b.statuses=a},function(a){})},b.$onChanges=function(a){},b.$onDestory=function(){}}angular.module("lss-launchpad").component("lssStatusList",{templateUrl:"/app/status/status-list.component.html",controller:a,controllerAs:"vm",bindings:{Binding:"="}}),a.$inject=["statusService"]}(),function(){"use strict";function a(){var a=this;a.$onInit=function(){},a.$onChanges=function(a){},a.$onDestory=function(){}}angular.module("lss-launchpad").component("lssStatus",{templateUrl:"/app/status/status.component.html",controller:a,controllerAs:"vm",bindings:{status:"="}})}(),function(){"use strict";function a(a,b){function c(){var c=b.defer();return a.get("/api/v2/status").then(function(a){c.resolve(a.data)},function(a){c.reject(a.status)}),c.promise}var d={getStatus:c};return d}angular.module("lss-launchpad").factory("statusService",a),a.$inject=["$http","$q"]}(),function(){"use strict";function a(a,b){function c(){b.assign(d.selectedRole,d.selectedUser).then(function(a){})}var d=this;d.users=[],d.roles=[],d.assign=c,d.$onInit=function(){a.getRoles().then(function(a){d.roles=a,d.selectedRole=d.roles[0]}),b.getUsers().then(function(a){d.users=a,d.selectedUser=d.users[0]})},d.$onChanges=function(a){},d.$onDestory=function(){}}angular.module("lss-launchpad").component("lssAssignRole",{templateUrl:"/app/user/assign-role.component.html",controller:a,controllerAs:"vm",bindings:{}}),a.$inject=["roleService","userService"]}(),function(){"use strict";function a(a,b){function c(){var c=a.defer();return b.get("/api/user").then(function(a){c.resolve(a.data)}),c.promise}function d(c,d){var e=a.defer(),f={role:c,user:d};return b.post("/api/user/assign",f).then(function(a){e.resolve(a.data)}),e.promise}function e(){var c=a.defer();return b.get("api/user/claims").then(function(a){c.resolve(a.data)}),c.promise}function f(){var b=a.defer();return e().then(function(a){var c={};a.reduce(function(a,b){return a[b.claimType+"->"+b.claimValue]=!0,a},c),b.resolve(c)}),b.promise}var g={getUsers:c,assign:d,getClaims:e,getClaimsMap:f};return g}angular.module("lss-launchpad").factory("userService",a),a.$inject=["$q","$http"]}(),function(){"use strict";function a(){var a=this;a.$onInit=function(){},a.$onChanges=function(a){},a.$onDestory=function(){}}angular.module("lss-launchpad").component("widget",{templateUrl:"/app/widget/widget.component.html",controller:a,controllerAs:"vm",bindings:{widget:"="}})}(),function(){"use strict";function a(a,b){function c(){var c=b.defer();return a.get("/api/v2/widget").then(function(a){c.resolve(a.data)},function(a){c.reject(a.status)}),c.promise}var d={getWidgets:c};return d}angular.module("lss-launchpad").factory("widgetService",a),a.$inject=["$http","$q"]}();
//# sourceMappingURL=launchpad-app.min.js.map